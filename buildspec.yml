version: 0.2

phases:
  install:
    runtime-versions:
      java: corretto17
  pre_build:
    commands:
      - wget http://www-eu.apache.org/dist/maven/maven-3/3.8.7/binaries/apache-maven-3.8.7-bin.tar.gz
      
      - wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.4.0.2170-linux.zip
      - unzip sonar-scanner-cli-4.4.0.2170-linux.zip
      - mv sonar-scanner-4.4.0.2170-linux /opt/sonar-scanner
      - chmod -R 775 /opt/sonar-scanner
      - echo "stage pre_build completed"    
      - cd acceso-login
      - mvn -version
      - mvn clean
      - mvn package
      - echo Logging in to Amazon ECR...
      - aws --version
      - $(aws ecr get-login --region $AWS_DEFAULT_REGION --no-include-email)
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
      - IMAGE_REPO_NAME=acceso-login
  build:
    commands:
      - echo Build started on `date`
      - mvn sonar:sonar -Dsonar.projectKey=$PROJECT -Dsonar.host.url=$HOST_SONAR -Dsonar.login=$TOKEN_SONAR 
      - echo Building the Docker image...
      - docker build -t $ECR_REPOSITORY_URI:latest .
      - docker tag $ECR_REPOSITORY_URI:latest $ECR_REPOSITORY_URI:$IMAGE_TAG
  post_build:
    commands:
      - echo Pushing the Docker images ...
      - docker push $ECR_REPOSITORY_URI:latest
      - docker push $ECR_REPOSITORY_URI:$IMAGE_TAG
      - printf '[{"name":"%s","imageUri":"%s"}]' $IMAGE_REPO_NAME $ECR_REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
      - cat imagedefinitions.json
artifacts:
  files:
    - acceso-login/imagedefinitions.json
  discard-paths: yes
    
